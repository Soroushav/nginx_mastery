#cache_configuration
proxy_cache_path /var/cache/nginx
                    keys_zone=NginxCache:20m
                    inactive=60m
                    levels=1:2
                    max_size=10g;


#for rate_limiting we should configure zone for it
limit_req_zone $binary_remote_addr zone=rate_limit:10m rate=1r/s;
limit_req_status 429; 

#for split client we should add another upstream based on docker-compose containers!
upstream dixton1 {
    server web1:8000;
}
upstream dixton2 {
    server web2:8080;
}


#we configure the split client rules
split_clients "${arg_token}" $variant {
    50% dixton1;
    *   dixton2;
}


server {
    listen 80;
    
    location / {
        proxy_pass http://$variant; #we change it to $variant to pass it to the split client
        proxy_set_header X_Forwarded_For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;

        #we want to use cache in this location so we use the following settings
        proxy_cache NginxCache;
        proxy_cache_min_uses 5;
        proxy_cache_valid 200 10m;
        proxy_cache_methods GET;
        add_header X-Proxy-Cache $upstream_cache_status; #for checking if cache is hit or miss!

        #for ignoring vary header we should use the following line
        proxy_ignore_headers Vary;

        #we add limit_req and for the zone we name the one that we configured above!
        limit_req zone=rate_limit burst=3 nodelay; #burst is the number of extra requests that nginx will handle!
    }

    location /static/ {
        alias /home/app/staticfiles/;
    }
}


# server {
#     listen 80;
#     server_name dixton.com ns.dixton.com *.dixton.com;
#
#     location / {
#         root /usr/share/nginx/html/main/;
#         index index.html;
#     }
# }
